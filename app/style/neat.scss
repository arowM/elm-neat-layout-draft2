.elmNeatLayout {
  $prefix: &;
  $top: #{$prefix}--top;
  $boundary: #{$prefix}--boundary;
  $boundaryContent: #{$prefix}--boundaryContent;
  $row: #{$prefix}--row;
  $rowChild: #{$prefix}--rowChild;
  $column: #{$prefix}--column;
  $columnChild: #{$prefix}--columnChild;
  $heightFlex: #{$prefix}--heightFlex;
  $heightMaxSize: #{$prefix}--heightMaxSize;
  $heightMinSize: #{$prefix}--heightMinSize;
  $widthFlex: #{$prefix}--widthFlex;
  $widthMaxSize: #{$prefix}--widthMaxSize;
  $widthMinSize: #{$prefix}--widthMinSize;

  &,
  &::before,
  &::after {
    box-sizing: border-box;
    padding: 0;
    margin: 0;
  }

  &--top {
    display: block;
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    overflow: hidden;
  }

  &--overlay {
    display: block;
    position: absolute;
    pointer-events: none;
    top: var(--overlay-top);
    bottom: var(--overlay-bottom);
    left: var(--overlay-left);
    right: var(--overlay-right);
    z-index: var(--overlay-priority);
    overflow: hidden;
  }

  &--boundary {
    overflow: hidden;

    &-hasOverlays:not(#{$top}) {
      position: relative;
    }

    &-enforcePointerEvent {
      pointer-events: auto;
    }

    & > #{$boundary}_scroller {
      height: 100%;
      width: 100%;

      &-verticalScroll > #{$boundaryContent} {
        height: auto;
      }

      &-horizontalScroll > #{$boundaryContent} {
        width: auto;
      }
    }

    &-view-hasContent,
    & > &_scroller {
      padding: var(--inner-gap-y) var(--inner-gap-x);
    }

    &-text {
      margin: calc(var(--outer-gap-y) / -2) 0;

      & > #{$boundary}_text {
        display: inline-block;
        line-height: calc(1em + var(--outer-gap-y));
      }
    }

    &-horizontalOverflow {
      & > #{$boundary}_scroller {
        overflow-x: auto;
      }
    }

    &-verticalOverflow {
      & > #{$boundary}_scroller {
        overflow-y: auto;
      }
    }

    &#{$heightFlex} {
      min-height: var(--min-height);

      &#{$boundary}-hasMaxHeight {
        max-height: var(--max-height);
      }
    }

    &#{$widthFlex} {
      min-width: var(--min-width);

      &#{$boundary}-hasMaxWidth {
        max-width: var(--max-width);
      }
    }

    &#{$heightMaxSize}#{$boundary}-hasMaxHeight {
      height: var(--max-height);
    }

    &#{$widthMaxSize}#{$boundary}-hasMaxWidth {
      width: var(--max-width);
    }

    &#{$heightMinSize}#{$boundary} {
      height: auto;
      min-height: var(--min-height);

      &-verticalOverflow {
        height: var(--min-height);
      }
    }

    &#{$widthMinSize}#{$boundary} {
      width: auto;
      min-width: var(--min-width);

      &-horizontalOverflow {
        width: var(--min-width);
      }
    }
  }

  &--row {
    flex-flow: row nowrap;
    display: flex;
    gap: var(--inner-gap-y) var(--inner-gap-x);

    &#{$row}-wrap {
      flex-wrap: wrap;
    }

    &#{$row}-justifyStart {
      justify-content: flex-start;
    }

    &#{$row}-justifyCenter {
      justify-content: center;
    }

    &#{$row}-justifyEnd {
      justify-content: flex-end;
    }

    & > #{$rowChild} {
      width: auto;
      flex-grow: 0;
      flex-shrink: 0;

      &#{$rowChild}-grow {
        flex-grow: 1;
      }

      &#{$boundary}-horizontalOverflow {
        flex-shrink: 1;
        width: 0;
      }

      &#{$rowChild}-alignStart {
        align-self: flex-start;
      }
      &#{$rowChild}-alignCenter {
        align-self: center;
      }
      &#{$rowChild}-alignEnd {
        align-self: flex-end;
      }
    }
  }

  &--column {
    flex-flow: column nowrap;
    display: flex;
    gap: var(--inner-gap-y) var(--inner-gap-x);

    &#{$column}-justifyStart {
      justify-content: flex-start;
    }
    &#{$column}-justifyCenter {
      justify-content: center;
    }
    &#{$column}-justifyEnd {
      justify-content: flex-end;
    }

    & > #{$columnChild} {
      height: auto;
      flex-grow: 0;
      flex-shrink: 0;

      &#{$boundary}-text {
        width: auto;
      }

      &#{$columnChild}-grow {
        flex-grow: 1;
      }

      &#{$boundary}-verticalOverflow {
        flex-shrink: 1;
        height: 0;
      }

      &#{$columnChild}-alignStart {
        align-self: flex-start;
      }
      &#{$columnChild}-alignCenter {
        align-self: center;
      }
      &#{$columnChild}-alignEnd {
        align-self: flex-end;
      }
    }
  }

  &--boundaryContent {
    height: 100%;
    width: 100%;

    &#{$boundary}#{$heightFlex} {
      max-height: var(--max-height);
    }

    &#{$boundary}#{$heightMaxSize} {
      height: var(--max-height);
    }

    &#{$boundary}#{$heightMinSize} {
      height: auto;
      min-height: var(--min-height);
    }

    &#{$boundary}#{$widthFlex} {
      max-width: var(--max-width);
    }

    &#{$boundary}#{$widthMaxSize} {
      width: var(--max-width);
    }

    &#{$boundary}#{$widthMinSize} {
      width: auto;
      min-width: var(--min-width);
    }
  }

  &--rowChild,
  &--columnChild {
    height: 100%;
    width: 100%;
  }
}
